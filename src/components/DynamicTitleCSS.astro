---
import CardArticle from './CardArticle.astro'

const DEFAULT_TEXT = 'CSS y ejemplos con AstroDB'
---

<CardArticle>
  <div slot='header'>
    <p class='title-box'>
      <span class='title'>{DEFAULT_TEXT}</span>
      <span class='title-transparent'>{DEFAULT_TEXT}</span>
    </p>
  </div>
  <div slot='body'>
    <p class='text-description'>Escriba el texto</p>
    <textarea id='title-control'>{DEFAULT_TEXT}</textarea>
    <hr class='divider' />
    <p class='text-description'>
      Para lograr este efecto debemos hacer transparente el texto y luego
      rellenarlo con una imagen.
    </p>
    <p class='text-description'>
      Para hacer transparente el texto debemos agregar tanto la propiedad de CSS <code
        >-webkit-text-fill-color: transparent;</code
      >, la cual nos permitira dejar el texto transparente, y la propedad <code
        >-webkit-background-clip: text;</code
      > que indica a donde va destinado el background que agreguemos, siendo este
      la imagen.
    </p>
    <p class='text-description'>
      Para agregar la imagen commo background solo debemos indicarlo asi <code
        >background: url([image-url]);</code
      > y listo! El movimiento es una animaci√≥n del background position.
    </p>
    <p class='text-description'>
      La posicion del background la seteamos de tal manera que haya un zoom en
      ella y el movimiento se pueda hacer correctamente: <code
        >background-size: auto 200%;</code
      > y la animacion es tal que <code>background-position: center 0;</code> a <code
        >background-position: center 200%;</code
      >
    </p>
  </div>
</CardArticle>

<style>
  .title-box {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 2rem;
    padding: 2rem;
    max-width: 40ch;
  }

  .text-description {
    font-size: var(--text-xs);
    max-width: 48ch;
    text-wrap: pretty;

    & code {
      color: hsla(0, 69%, 69%, 0.881);
    }
  }
  .title {
    font-size: var(--text-xl);
    color: transparent;
    background: url('https://mereton.com.au/wp-content/uploads/2016/12/Daisy-Leaf-Marine.jpg');
    -webkit-text-fill-color: transparent;
    -webkit-background-clip: text;
    background-size: auto 200%;
    animation: move-background 10s infinite linear;
    position: absolute;
    text-align: center;
    z-index: 10;
    text-wrap: pretty;
  }

  .title-transparent {
    font-size: var(--text-xl);
    background: url('https://mereton.com.au/wp-content/uploads/2016/12/Daisy-Leaf-Marine.jpg');
    -webkit-text-fill-color: transparent;
    -webkit-background-clip: text;
    background-size: auto 200%;
    animation: move-background 10s infinite linear;
    position: absolute;
    text-align: center;
    filter: blur(8px);
    opacity: 0.5;
    user-select: none;
    text-wrap: pretty;
  }
  .divider {
    border-color: var(--dark-transparent);
    margin: 1rem 0;
  }

  @keyframes move-background {
    from {
      background-position: center 0;
    }
    to {
      background-position: center 200%;
    }
  }

  textarea {
    resize: none;
    field-sizing: content;
    padding: 1em 1.5em;
    padding-right: 4em;
  }
</style>

<script>
  const $input = document.getElementById('title-control')
  const $title = document.querySelector('.title') as HTMLSpanElement
  const $titleTransparent = document.querySelector(
    '.title-transparent'
  ) as HTMLSpanElement

  $input?.addEventListener('input', ({ target }) => {
    if (!(target instanceof HTMLTextAreaElement)) return

    const { value } = target
    $title.textContent = value
    $titleTransparent.textContent = value
  })
</script>
